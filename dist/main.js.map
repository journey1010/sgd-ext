{"mappings":"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","sources":["<anon>","src/main.js","src/style-fix.js","src/paste-blocker.js","src/auto-code-dependencia.js","src/auto-nivel-dependencia.js","src/fix-list-local.js"],"sourcesContent":["(() => {\n// src/main.js\n// src/style-fix.js\n// Lista de IDs de los elementos a modificar.\nconst $fc5d8a6d3c6f924c$var$ids = [\n    \"asu\",\n    \"dir\",\n    \"correo\",\n    \"coUsuario\",\n    \"sDeAsuM\",\n    \"deAsu\",\n    \"deObsDoc\",\n    \"busAsunto\",\n    \"sBuscAsunto\",\n    \"coUsuariolabel\",\n    \"dePass\",\n    \"txtBusDependencia\",\n    \"deSigla\",\n    \"deCortaDepen\"\n];\n// Función para aplicar el estilo a un elemento por su ID.\nfunction $fc5d8a6d3c6f924c$var$applyStyleIfNeeded(id) {\n    const el = document.getElementById(id);\n    if (el) el.style.textTransform = \"none\";\n}\nfunction $fc5d8a6d3c6f924c$export$297d37f390eb64c8() {\n    // Aplica el estilo a los elementos que ya existen al cargar la página.\n    $fc5d8a6d3c6f924c$var$ids.forEach($fc5d8a6d3c6f924c$var$applyStyleIfNeeded);\n    // Observa el DOM para detectar y modificar elementos que se agregan dinámicamente.\n    const observer = new MutationObserver(()=>{\n        $fc5d8a6d3c6f924c$var$ids.forEach($fc5d8a6d3c6f924c$var$applyStyleIfNeeded);\n    });\n    observer.observe(document.body, {\n        childList: true,\n        subtree: true\n    });\n}\n\n\n// src/paste-blocker.js\nfunction $f0681429a179a55b$export$af4901dedfbbb7e1() {\n    // Agrega un listener en la fase de captura para detener la propagación del evento.\n    document.addEventListener(\"paste\", function(event) {\n        // Si la acción predeterminada del evento ha sido impedida\n        if (event.defaultPrevented) {\n            // Obtenemos los datos del portapapeles.\n            const pastedText = (event.clipboardData || window.clipboardData).getData('text');\n            if (pastedText) {\n                // Aquí puedes pegar el texto manualmente en el elemento activo (ej. un input).\n                // Esto solo es necesario si el bloqueo es muy agresivo.\n                const activeElement = document.activeElement;\n                if (activeElement && (activeElement.tagName === 'INPUT' || activeElement.tagName === 'TEXTAREA')) activeElement.value += pastedText;\n            }\n        }\n        // Asegura que la propagación del evento no se detenga.\n        event.stopPropagation();\n    }, true); // El 'true' es para que el listener se ejecute en la fase de captura.\n    document.addEventListener(\"keydown\", function(event) {\n        if (event.ctrlKey && event.key === \"v\") event.stopPropagation();\n    }, true);\n}\n\n\n// src/auto-code-dependencia.js\nconst $025fd3a6b42c62ef$var$SELECTORS = {\n    form: 'form#dependenciaBean',\n    input: 'input#coDependencia'\n};\nasync function $025fd3a6b42c62ef$var$fetchAndFill(input) {\n    if (!input || input.dataset.filled === \"1\") return; // Evitar múltiples ejecuciones\n    try {\n        input.disabled = true;\n        const res = await fetch('https://sgd-control.regionloreto.gob.pe/api/dependencia/last/co_dependencia', {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json'\n            }\n        });\n        if (!res.ok) throw new Error(`HTTP ${res.status}`);\n        const data = await res.json();\n        const value = typeof data === 'string' ? data : Object.values(data)[0];\n        if (value != null && String(value).trim() !== '') {\n            input.value = value;\n            input.dispatchEvent(new Event('input', {\n                bubbles: true\n            }));\n            input.dispatchEvent(new Event('change', {\n                bubbles: true\n            }));\n            input.dataset.filled = \"1\"; // Marcar como llenado\n        }\n    } catch (err) {\n        console.error('Error al obtener coDependencia:', err);\n    } finally{\n        input.disabled = false;\n    }\n}\nfunction $025fd3a6b42c62ef$var$watchDOM() {\n    const observer = new MutationObserver(()=>{\n        const input = document.querySelector($025fd3a6b42c62ef$var$SELECTORS.input);\n        if (input && !input.dataset.watched) {\n            input.dataset.watched = \"1\"; // Evitar múltiples observaciones\n            $025fd3a6b42c62ef$var$fetchAndFill(input);\n        }\n    });\n    observer.observe(document.body, {\n        childList: true,\n        subtree: true\n    });\n}\nfunction $025fd3a6b42c62ef$export$163b5b3dff9f4fac() {\n    $025fd3a6b42c62ef$var$watchDOM();\n}\n\n\n// src/auto-nivel-dependencia.js\nconst $21ff7f972fe0ffaa$var$FORM_ID = 'dependenciaBean'; // id del formulario\nconst $21ff7f972fe0ffaa$var$INPUT_PADRE_ID = 'deDepenPadre'; // id del input padre\nconst $21ff7f972fe0ffaa$var$INPUT_NIVEL_ID = 'coNivel'; // id del input hijo\nlet $21ff7f972fe0ffaa$var$lastNivel = \"\"; // Memoria para restaurar el valor si es necesario\nfunction $21ff7f972fe0ffaa$var$initWatcher(inputPadre, inputNivel) {\n    let lastVal = inputPadre.value;\n    async function fetchNivel() {\n        const valor = inputPadre.value.trim();\n        if (!valor) return;\n        try {\n            inputNivel.disabled = true;\n            const url = `https://sgd-control.regionloreto.gob.pe/api/dependencia/nivel/father?des_dep=${encodeURIComponent(valor)}`;\n            const res = await fetch(url, {\n                headers: {\n                    'Accept': 'application/json'\n                }\n            });\n            if (!res.ok) throw new Error(`HTTP ${res.status}`);\n            const data = await res.json();\n            let value = '';\n            if (typeof data === 'number' || typeof data === 'string') value = data;\n            else if (data && typeof data === 'object') value = data.nivel ?? data.coNivel ?? Object.values(data)[0] ?? '';\n            if (value != null && String(value).trim() !== '') {\n                inputNivel.value = value;\n                $21ff7f972fe0ffaa$var$lastNivel = value; // Guardar en memoria\n                [\n                    'input',\n                    'change'\n                ].forEach((evt)=>inputNivel.dispatchEvent(new Event(evt, {\n                        bubbles: true\n                    })));\n                console.log(`\\u{2705} coNivel autocompletado con: ${value}`);\n            }\n        } catch (err) {\n            console.error(\"\\u274C Error al obtener coNivel:\", err);\n        } finally{\n            inputNivel.disabled = false;\n        }\n    }\n    inputPadre.addEventListener('change', ()=>{\n        lastVal = inputPadre.value;\n        fetchNivel();\n    });\n    // Polling para cambios hechos por otros scripts (como autocompletadores)\n    setInterval(()=>{\n        if (inputPadre.value !== lastVal) {\n            lastVal = inputPadre.value;\n            fetchNivel();\n        }\n    }, 500);\n    // Restaurar valor si se borró\n    if ($21ff7f972fe0ffaa$var$lastNivel && !inputNivel.value) {\n        inputNivel.value = $21ff7f972fe0ffaa$var$lastNivel;\n        [\n            'input',\n            'change'\n        ].forEach((evt)=>inputNivel.dispatchEvent(new Event(evt, {\n                bubbles: true\n            })));\n    }\n}\nfunction $21ff7f972fe0ffaa$var$checkAndBind() {\n    const form = document.getElementById($21ff7f972fe0ffaa$var$FORM_ID);\n    if (!form) return false;\n    const inputPadre = form.querySelector(`#${$21ff7f972fe0ffaa$var$INPUT_PADRE_ID}`);\n    const inputNivel = form.querySelector(`#${$21ff7f972fe0ffaa$var$INPUT_NIVEL_ID}`);\n    if (inputPadre && inputNivel && !inputPadre.dataset.watched) {\n        inputPadre.dataset.watched = \"1\";\n        $21ff7f972fe0ffaa$var$initWatcher(inputPadre, inputNivel);\n        return true;\n    }\n    return false;\n}\nfunction $21ff7f972fe0ffaa$export$a9d9d83e173d5f47() {\n    // Intento inicial y observador para contenido dinámico\n    if (!$21ff7f972fe0ffaa$var$checkAndBind()) {\n        const obs = new MutationObserver($21ff7f972fe0ffaa$var$checkAndBind);\n        obs.observe(document.body, {\n            childList: true,\n            subtree: true\n        });\n    }\n    // Compatibilidad con PrimeFaces/JSF\n    if (window.PF && typeof $ === 'function') $(document).on('pfAjaxComplete', $21ff7f972fe0ffaa$var$checkAndBind);\n}\n\n\n// auto-code-dependencia.js\n// Usa una constante para los selectores.\nconst $0a438bd7cf178ef7$var$SELECTORS = {\n    modal: '#dragmodal .panel-heading',\n    tableBody: '#tlbLocalConsDocExtModal > tbody'\n};\n/**\n * Realiza la llamada a la API y maneja posibles errores.\n * @returns {Promise<Array|null>} Un array de objetos con los datos o null si falla.\n */ async function $0a438bd7cf178ef7$var$fetchData() {\n    try {\n        const response = await fetch('https://sgd-control.regionloreto.gob.pe/api/dependencia/local');\n        if (!response.ok) throw new Error(`Error en la solicitud: ${response.status} - ${response.statusText}`);\n        return await response.json();\n    } catch (error) {\n        console.error('Error: No se pudo obtener la data del endpoint.', error);\n        return null;\n    }\n}\n// La fila original con \"[TODOS]\"\nconst $0a438bd7cf178ef7$var$firstRowHTML = `\n    <tr tabindex=\"0\" class=\"ui-datatable-odd row_selected\">\n        <td width=\"450\">[TODOS]</td>\n        <td style=\"display:none\"></td>\n    </tr>\n`;\n/**\n * Crea filas HTML de la tabla a partir de los datos.\n * @param {Array} data - El array de objetos con los datos de las dependencias.\n * @returns {string} El HTML de las filas de la tabla.\n */ function $0a438bd7cf178ef7$var$createTableRows(data) {\n    if (!Array.isArray(data) || data.length === 0) // Devuelve solo la fila original si no hay datos.\n    return $0a438bd7cf178ef7$var$firstRowHTML;\n    // Genera las filas de la API.\n    const newRowsHTML = data.map((item, index)=>`\n        <tr tabindex=\"0\" class=\"ui-datatable-${index % 2 === 0 ? 'odd' : 'even'}\">\n            <td width=\"450\">${item.nombre_local}</td>\n            <td style=\"display:none\">${item.ccod_local}</td>\n        </tr>\n    `).join('');\n    // Devuelve la fila original seguida de las nuevas filas.\n    return $0a438bd7cf178ef7$var$firstRowHTML + newRowsHTML;\n}\n/**\n * Observa el DOM para detectar la aparición del modal y cargar los datos.\n */ function $0a438bd7cf178ef7$var$watchModalAndFillTable() {\n    const observer = new MutationObserver((mutationsList, obs)=>{\n        const modalElement = document.querySelector($0a438bd7cf178ef7$var$SELECTORS.modal);\n        if (modalElement) {\n            console.log('Modal detectado. Iniciando carga de datos...');\n            obs.disconnect(); // Desconecta el observador para evitar llamadas duplicadas.\n            // Llama a la API y, si los datos son válidos, actualiza la tabla.\n            $0a438bd7cf178ef7$var$fetchData().then((data)=>{\n                if (data) {\n                    const tableBody = document.querySelector($0a438bd7cf178ef7$var$SELECTORS.tableBody);\n                    if (tableBody) {\n                        const rowsHTML = $0a438bd7cf178ef7$var$createTableRows(data);\n                        tableBody.innerHTML = rowsHTML;\n                        console.log('Tabla actualizada exitosamente.');\n                    } else console.error(\"Error: No se encontr\\xf3 el cuerpo de la tabla (tbody) con el selector:\", $0a438bd7cf178ef7$var$SELECTORS.tableBody);\n                }\n            });\n        }\n    });\n    observer.observe(document.body, {\n        childList: true,\n        subtree: true\n    });\n}\nfunction $0a438bd7cf178ef7$export$ccbf884f46a05f9e() {\n    $0a438bd7cf178ef7$var$watchModalAndFillTable();\n}\n\n\n// Función que se ejecuta cuando el DOM está listo\nfunction $0026cc5aa8359700$var$run() {\n    console.log(\"Extensi\\xf3n iniciada.\");\n    (0, $fc5d8a6d3c6f924c$export$297d37f390eb64c8)();\n    (0, $f0681429a179a55b$export$af4901dedfbbb7e1)();\n    (0, $025fd3a6b42c62ef$export$163b5b3dff9f4fac)();\n    (0, $21ff7f972fe0ffaa$export$a9d9d83e173d5f47)();\n    (0, $0a438bd7cf178ef7$export$ccbf884f46a05f9e)();\n}\n// Asegurarse de que el script se ejecute después de que el contenido de la página se haya cargado.\nif (document.readyState === 'loading') document.addEventListener('DOMContentLoaded', $0026cc5aa8359700$var$run);\nelse $0026cc5aa8359700$var$run();\n\n})();\n//# sourceMappingURL=main.js.map\n","// src/main.js\n\nimport { initStyleFix } from './style-fix.js';\nimport { initPasteBlocker } from './paste-blocker.js';\nimport { initAutoCodeDependencia } from './auto-code-dependencia.js';\nimport { initAutoNivelDependencia } from './auto-nivel-dependencia.js';\nimport {initFixLocal} from './fix-list-local.js';\n\n// Función que se ejecuta cuando el DOM está listo\nfunction run() {\n    console.log(\"Extensión iniciada.\");\n    initStyleFix();\n    initPasteBlocker();\n    initAutoCodeDependencia();\n    initAutoNivelDependencia();\n    initFixLocal();\n}\n\n// Asegurarse de que el script se ejecute después de que el contenido de la página se haya cargado.\nif (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', run);\n} else {\n    run();\n}","// src/style-fix.js\n\n// Lista de IDs de los elementos a modificar.\nconst ids = [\n    \"asu\", \"dir\", \"correo\", \"coUsuario\", \"sDeAsuM\", \"deAsu\", \"deObsDoc\", \"busAsunto\", \"sBuscAsunto\", \"coUsuariolabel\",\n    \"dePass\", \"txtBusDependencia\", \"deSigla\", \"deCortaDepen\",\n];\n\n// Función para aplicar el estilo a un elemento por su ID.\nfunction applyStyleIfNeeded(id) {\n    const el = document.getElementById(id);\n    if (el) {\n        el.style.textTransform = \"none\";\n    }\n}\n\n// Función principal que inicializa la funcionalidad.\nexport function initStyleFix() {\n    // Aplica el estilo a los elementos que ya existen al cargar la página.\n    ids.forEach(applyStyleIfNeeded);\n\n    // Observa el DOM para detectar y modificar elementos que se agregan dinámicamente.\n    const observer = new MutationObserver(() => {\n        ids.forEach(applyStyleIfNeeded);\n    });\n\n    observer.observe(document.body, {\n        childList: true,\n        subtree: true\n    });\n}","// src/paste-blocker.js\n\nexport function initPasteBlocker() {\n    // Agrega un listener en la fase de captura para detener la propagación del evento.\n    document.addEventListener(\"paste\", function(event) {\n        // Si la acción predeterminada del evento ha sido impedida\n        if (event.defaultPrevented) {\n            // Obtenemos los datos del portapapeles.\n            const pastedText = (event.clipboardData || window.clipboardData).getData('text');\n            \n            if (pastedText) {\n                // Aquí puedes pegar el texto manualmente en el elemento activo (ej. un input).\n                // Esto solo es necesario si el bloqueo es muy agresivo.\n                const activeElement = document.activeElement;\n                if (activeElement && (activeElement.tagName === 'INPUT' || activeElement.tagName === 'TEXTAREA')) {\n                    activeElement.value += pastedText;\n                }\n            }\n        }\n        // Asegura que la propagación del evento no se detenga.\n        event.stopPropagation();\n    }, true); // El 'true' es para que el listener se ejecute en la fase de captura.\n\n    document.addEventListener(\"keydown\", function(event) {\n        if (event.ctrlKey && event.key === \"v\") {\n            event.stopPropagation();\n        }\n    }, true);\n}","// src/auto-code-dependencia.js\n\nconst SELECTORS = {\n    form: 'form#dependenciaBean',\n    input: 'input#coDependencia'\n};\n\nasync function fetchAndFill(input) {\n    if (!input || input.dataset.filled === \"1\") return; // Evitar múltiples ejecuciones\n\n    try {\n        input.disabled = true;\n        const res = await fetch('https://sgd-control.regionloreto.gob.pe/api/dependencia/last/co_dependencia', {\n            method: 'GET',\n            headers: { 'Accept': 'application/json' }\n        });\n\n        if (!res.ok) throw new Error(`HTTP ${res.status}`);\n        const data = await res.json();\n        const value = typeof data === 'string' ? data : Object.values(data)[0];\n\n        if (value != null && String(value).trim() !== '') {\n            input.value = value;\n            input.dispatchEvent(new Event('input', { bubbles: true }));\n            input.dispatchEvent(new Event('change', { bubbles: true }));\n            input.dataset.filled = \"1\"; // Marcar como llenado\n        }\n\n    } catch (err) {\n        console.error('Error al obtener coDependencia:', err);\n    } finally {\n        input.disabled = false;\n    }\n}\n\nfunction watchDOM() {\n    const observer = new MutationObserver(() => {\n        const input = document.querySelector(SELECTORS.input);\n        if (input && !input.dataset.watched) {\n            input.dataset.watched = \"1\"; // Evitar múltiples observaciones\n            fetchAndFill(input);\n        }\n    });\n\n    observer.observe(document.body, { childList: true, subtree: true });\n}\n\nexport function initAutoCodeDependencia() {\n    watchDOM();\n}","// src/auto-nivel-dependencia.js\n\nconst FORM_ID = 'dependenciaBean';       // id del formulario\nconst INPUT_PADRE_ID = 'deDepenPadre';   // id del input padre\nconst INPUT_NIVEL_ID = 'coNivel';        // id del input hijo\n\nlet lastNivel = \"\"; // Memoria para restaurar el valor si es necesario\n\nfunction initWatcher(inputPadre, inputNivel) {\n    let lastVal = inputPadre.value;\n\n    async function fetchNivel() {\n        const valor = inputPadre.value.trim();\n        if (!valor) return;\n\n        try {\n            inputNivel.disabled = true;\n            const url = `https://sgd-control.regionloreto.gob.pe/api/dependencia/nivel/father?des_dep=${encodeURIComponent(valor)}`;\n            const res = await fetch(url, { headers: { 'Accept': 'application/json' } });\n            if (!res.ok) throw new Error(`HTTP ${res.status}`);\n            const data = await res.json();\n\n            let value = '';\n            if (typeof data === 'number' || typeof data === 'string') {\n                value = data;\n            } else if (data && typeof data === 'object') {\n                value = data.nivel ?? data.coNivel ?? Object.values(data)[0] ?? '';\n            }\n\n            if (value != null && String(value).trim() !== '') {\n                inputNivel.value = value;\n                lastNivel = value; // Guardar en memoria\n                ['input', 'change'].forEach(evt => inputNivel.dispatchEvent(new Event(evt, { bubbles: true })));\n                console.log(`✅ coNivel autocompletado con: ${value}`);\n            }\n        } catch (err) {\n            console.error('❌ Error al obtener coNivel:', err);\n        } finally {\n            inputNivel.disabled = false;\n        }\n    }\n\n    inputPadre.addEventListener('change', () => {\n        lastVal = inputPadre.value;\n        fetchNivel();\n    });\n\n    // Polling para cambios hechos por otros scripts (como autocompletadores)\n    setInterval(() => {\n        if (inputPadre.value !== lastVal) {\n            lastVal = inputPadre.value;\n            fetchNivel();\n        }\n    }, 500);\n\n    // Restaurar valor si se borró\n    if (lastNivel && !inputNivel.value) {\n        inputNivel.value = lastNivel;\n        ['input', 'change'].forEach(evt => inputNivel.dispatchEvent(new Event(evt, { bubbles: true })));\n    }\n}\n\nfunction checkAndBind() {\n    const form = document.getElementById(FORM_ID);\n    if (!form) return false;\n\n    const inputPadre = form.querySelector(`#${INPUT_PADRE_ID}`);\n    const inputNivel = form.querySelector(`#${INPUT_NIVEL_ID}`);\n\n    if (inputPadre && inputNivel && !inputPadre.dataset.watched) {\n        inputPadre.dataset.watched = \"1\";\n        initWatcher(inputPadre, inputNivel);\n        return true;\n    }\n    return false;\n}\n\nexport function initAutoNivelDependencia() {\n    // Intento inicial y observador para contenido dinámico\n    if (!checkAndBind()) {\n        const obs = new MutationObserver(checkAndBind);\n        obs.observe(document.body, { childList: true, subtree: true });\n    }\n\n    // Compatibilidad con PrimeFaces/JSF\n    if (window.PF && typeof $ === 'function') {\n        $(document).on('pfAjaxComplete', checkAndBind);\n    }\n}","// auto-code-dependencia.js\n\n// Usa una constante para los selectores.\nconst SELECTORS = {\n    modal: '#dragmodal .panel-heading', // Corregido: antes era '#dragmodal.panel-heading'\n    tableBody: '#tlbLocalConsDocExtModal > tbody'\n};\n\n/**\n * Realiza la llamada a la API y maneja posibles errores.\n * @returns {Promise<Array|null>} Un array de objetos con los datos o null si falla.\n */\nasync function fetchData() {\n    try {\n        const response = await fetch('https://sgd-control.regionloreto.gob.pe/api/dependencia/local');\n        if (!response.ok) {\n            throw new Error(`Error en la solicitud: ${response.status} - ${response.statusText}`);\n        }\n        return await response.json();\n    } catch (error) {\n        console.error('Error: No se pudo obtener la data del endpoint.', error);\n        return null;\n    }\n}\n\n// La fila original con \"[TODOS]\"\nconst firstRowHTML = `\n    <tr tabindex=\"0\" class=\"ui-datatable-odd row_selected\">\n        <td width=\"450\">[TODOS]</td>\n        <td style=\"display:none\"></td>\n    </tr>\n`;\n\n/**\n * Crea filas HTML de la tabla a partir de los datos.\n * @param {Array} data - El array de objetos con los datos de las dependencias.\n * @returns {string} El HTML de las filas de la tabla.\n */\nfunction createTableRows(data) {\n    if (!Array.isArray(data) || data.length === 0) {\n        // Devuelve solo la fila original si no hay datos.\n        return firstRowHTML;\n    }\n\n    // Genera las filas de la API.\n    const newRowsHTML = data.map((item, index) => `\n        <tr tabindex=\"0\" class=\"ui-datatable-${index % 2 === 0 ? 'odd' : 'even'}\">\n            <td width=\"450\">${item.nombre_local}</td>\n            <td style=\"display:none\">${item.ccod_local}</td>\n        </tr>\n    `).join('');\n\n    // Devuelve la fila original seguida de las nuevas filas.\n    return firstRowHTML + newRowsHTML;\n}\n\n/**\n * Observa el DOM para detectar la aparición del modal y cargar los datos.\n */\nfunction watchModalAndFillTable() {\n    const observer = new MutationObserver((mutationsList, obs) => {\n        const modalElement = document.querySelector(SELECTORS.modal);\n\n        if (modalElement) {\n            console.log('Modal detectado. Iniciando carga de datos...');\n            obs.disconnect(); // Desconecta el observador para evitar llamadas duplicadas.\n\n            // Llama a la API y, si los datos son válidos, actualiza la tabla.\n            fetchData().then(data => {\n                if (data) {\n                    const tableBody = document.querySelector(SELECTORS.tableBody);\n                    if (tableBody) {\n                        const rowsHTML = createTableRows(data);\n                        tableBody.innerHTML = rowsHTML;\n                        console.log('Tabla actualizada exitosamente.');\n                    } else {\n                        console.error('Error: No se encontró el cuerpo de la tabla (tbody) con el selector:', SELECTORS.tableBody);\n                    }\n                }\n            });\n        }\n    });\n\n    observer.observe(document.body, { childList: true, subtree: true });\n}\n\n/**\n * Función de inicialización principal.\n */\nexport function initFixLocal() {\n    watchModalAndFillTable();\n}\n"],"names":["$fc5d8a6d3c6f924c$var$ids","$fc5d8a6d3c6f924c$var$applyStyleIfNeeded","id","el","document","getElementById","style","textTransform","$025fd3a6b42c62ef$var$fetchAndFill","input","dataset","filled","disabled","res","fetch","method","headers","ok","Error","status","data","json","value","Object","values","String","trim","dispatchEvent","Event","bubbles","err","console","error","$21ff7f972fe0ffaa$var$lastNivel","$21ff7f972fe0ffaa$var$checkAndBind","form","inputPadre","querySelector","inputNivel","watched","lastVal","fetchNivel","valor","url","encodeURIComponent","nivel","coNivel","forEach","evt","log","addEventListener","setInterval","$0a438bd7cf178ef7$var$fetchData","response","statusText","$0a438bd7cf178ef7$var$firstRowHTML","$0026cc5aa8359700$var$run","observer","MutationObserver","observe","body","childList","subtree","event","defaultPrevented","pastedText","clipboardData","window","getData","activeElement","tagName","stopPropagation","ctrlKey","key","obs","PF","$","on","mutationsList","disconnect","then","tableBody","innerHTML","Array","isArray","length","map","item","index","nombre_local","ccod_local","join","readyState"],"version":3,"file":"main.js.map"}